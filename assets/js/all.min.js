document.addEventListener("DOMContentLoaded", function () {
  // Event listener untuk tombol "Download Gambar"
  const t = document.querySelector(".container");
  document.getElementById("downloadButton").addEventListener("click", function () {
      html2canvas(t, {
          scale: 2,
          useCORS: true
      }).then(function (t) {
          const e = t.toDataURL("image/png");
          const n = new Date();
          const a = n.getFullYear();
          const d = String(n.getMonth() + 1).padStart(2, "0");
          const o = `laporan_${String(n.getDate()).padStart(2, "0")}_${d}_${a}_${String(n.getHours()).padStart(2, "0")}${String(n.getMinutes()).padStart(2, "0")}${String(n.getSeconds()).padStart(2, "0")}${String(n.getMilliseconds()).padStart(3, "0")}_${String(Math.floor(1e6 * Math.random())).padStart(6, "0")}.png`;
          const r = document.createElement("a");
          r.href = e;
          r.download = o;
          r.style.display = "none";
          document.body.appendChild(r);
          r.click();
          document.body.removeChild(r);
      });
  });

  // Event listener untuk menampilkan tanggal saat ini
  const currentDate = new Date();
  const dateText = `${["Minggu", "Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu"][currentDate.getDay()]}, ${currentDate.getDate()} ${["Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"][currentDate.getMonth()]} ${currentDate.getFullYear()}`;
  document.getElementById("tanggalSekarang").textContent = dateText;

  // Event listener untuk tombol "Terapkan Jadwal"
  const jadwalSelect = document.getElementById("jadwal");
  const terapkanJadwalButton = document.getElementById("terapkanJadwal");
  const judulJadwal = document.getElementById("judulJadwal");
  const waktu = document.getElementById("waktu");

  terapkanJadwalButton.addEventListener("click", function () {
      switch (jadwalSelect.value) {
          case "pagi_siang":
              judulJadwal.textContent = "RUPAM PAGI KE RUPAM SIANG";
              waktu.textContent = "13.00";
              updateReguPengamananText("Pagi", "Siang");
              break;
          case "siang_malam":
              judulJadwal.textContent = "RUPAM SIANG KE RUPAM MALAM";
              waktu.textContent = "19.00";
              updateReguPengamananText("Siang", "Malam");
              break;
          case "malam_pagi":
              judulJadwal.textContent = "RUPAM MALAM KE RUPAM PAGI";
              waktu.textContent = "07.00";
              updateReguPengamananText("Malam", "Pagi");
              break;
          default:
              console.error("Pilihan tidak valid");
      }
  });

  function updateReguPengamananText(leftShift, rightShift) {
      const leftRegu = document.querySelector(".rupam-grid .col-md-12:nth-child(1) h3");
      const rightRegu = document.querySelector(".rupam-grid .col-md-12:nth-child(2) h3");

      leftRegu.textContent = `Regu Pengamanan ${leftShift}`;
      rightRegu.textContent = `Regu Pengamanan ${rightShift}`;
  }

  // Fungsi untuk memperbarui tampilan jumlah penghuni
  function updatePenghuniDisplay() {
      const tahananLaki = document.getElementById("tahanan-laki").value;
      const tahananPerempuan = document.getElementById("tahanan-perempuan").value;
      const narapidanaLaki = document.getElementById("narapidana-laki").value;
      const narapidanaPerempuan = document.getElementById("narapidana-perempuan").value;
      const jumlahDalam = document.getElementById("jumlah-dalam").value;
      const jumlahLuar = document.getElementById("jumlah-luar").value;
      const jumlahTotal = document.getElementById("jumlah-total").value;

      const penghuniValues = [tahananLaki, tahananPerempuan, narapidanaLaki, narapidanaPerempuan, jumlahDalam, jumlahLuar, jumlahTotal];
      const penghuniItems = document.querySelectorAll(".penghuni-container .penghuni-item .penghuni-value");

      for (let i = 0; i < penghuniValues.length; i++) {
          if (penghuniValues[i] === "0") {
              penghuniItems[i].textContent = "-";
          } else {
              penghuniItems[i].textContent = penghuniValues[i] + " Orang";
          }
      }
  }

  // Event listener untuk tombol "Simpan Pengaturan Penghuni"
  document.getElementById("simpanPengaturanPenghuni").addEventListener("click", function () {
      updatePenghuniDisplay();
  });

  updatePenghuniDisplay();

  // Event listener untuk tombol "Upload Gambar"
  document.getElementById("uploadImageButton").addEventListener("click", function () {
      const uploadImage = document.getElementById("uploadImage");
      const uploadedImage = document.getElementById("uploadedImage");
      const imageContainer = document.getElementById("imageContainer");
      const selectedFile = uploadImage.files[0];
      if (selectedFile) {
          const reader = new FileReader();
          reader.onload = function (e) {
              uploadedImage.src = e.target.result;
              imageContainer.style.display = "block";
          };
          reader.readAsDataURL(selectedFile);
      } else {
          alert("Silakan pilih gambar terlebih dahulu.");
      }
  });

  // Mencari teks yang mencakup kriteria yang Anda sebutkan
  var copyrightText = "Generated by E-ASTEKPAM | Copyright Â©2023 Eliyanto Sarage - All Rights Reserved";
  var githubLink = "https://eliyantosarage.github.io/";

  if (document.body.textContent.indexOf(copyrightText) === -1 && document.body.innerHTML.indexOf(githubLink) === -1) {
      // Jika teks yang Anda cari tidak ditemukan, alihkan ke URL yang ditentukan
      window.location.href = "https://www.instagram.com/eliyantosarage_/";
  }
});

// Fungsi untuk menampilkan atau menyembunyikan form input manual (Kiri)
function toggleFormInputManualKiri(isReguBayangan) {
  const formInputManualKiri = document.getElementById("formInputManualKiri");
  formInputManualKiri.style.display = isReguBayangan ? "block" : "none";
}

// Fungsi untuk menampilkan atau menyembunyikan form input manual (Kanan)
function toggleFormInputManualKanan(isReguBayangan) {
  const formInputManualKanan = document.getElementById("formInputManualKanan");
  formInputManualKanan.style.display = isReguBayangan ? "block" : "none";
}

// Fungsi untuk mengupdate personil pengamanan
function updatePersonilPengamanan(posisi, regu, manualData = null) {
  // Definisikan data personil pengamanan untuk setiap regu
  const personil = {
      ReguI: {
          kaRupam: "Sutejo",
          anggotaSatu: "Hasan Shoimaini",
          anggotaDua: "Wisnu Murti Wijaya",
          petugasP2U: "Dipta Zaza Diandaru",
      },
      ReguII: {
          kaRupam: "Ahmad Mahin",
          anggotaSatu: "Nana Heru Susilo",
          anggotaDua: "Rizky Fadli",
          petugasP2U: "Eliyanto Sarage",
      },
      ReguIII: {
          kaRupam: "Hery Purwoko S",
          anggotaSatu: "Donny Chandra N",
          anggotaDua: "Ibnu Suganda",
          petugasP2U: "Zaenudin",
      },
      ReguIV: {
          kaRupam: "Supriyono",
          anggotaSatu: "Naufal Allaam Firdaus",
          anggotaDua: "Eko Arif Hidayat",
          petugasP2U: "Zeonovandhie Kukuh P",
      },
  };

  // Mengecek apakah akan digunakan data manual atau data regu
  let dataToUpdate;
  let keteranganText = "Hadir Lengkap"; // Default keterangan

  if (manualData) {
      dataToUpdate = manualData;
      keteranganText = manualData.keterangan || ""; // Mengambil keterangan manual jika ada
  } else {
      dataToUpdate = personil[regu];
  }

  // Perbarui bagian personil pengamanan sesuai dengan data yang dipilih
  document.getElementById(`kaRupam${posisi}`).textContent = dataToUpdate.kaRupam;
  document.getElementById(`anggotaSatu${posisi}`).textContent = dataToUpdate.anggotaSatu;
  document.getElementById(`anggotaDua${posisi}`).textContent = dataToUpdate.anggotaDua;
  document.getElementById(`petugasP2U${posisi}`).textContent = dataToUpdate.petugasP2U;

  // Perbarui keterangan
  document.getElementById(`keterangan${posisi}`).textContent = keteranganText;
}

// Event listener untuk tombol Terapkan (Kiri)
document.getElementById("terapkanButtonKiri").addEventListener("click", function () {
  const selectedReguKiri = document.getElementById("reguSelectKiri").value;
  const isReguBayanganKiri = selectedReguKiri === "ReguBayangan";

  if (isReguBayanganKiri) {
      // Jika Regu Bayangan dipilih, gunakan data manual
      const manualDataKiri = {
          kaRupam: document.getElementById("namaKaRupamKiriManual").value,
          anggotaSatu: document.getElementById("anggotaSatuKiriManual").value,
          anggotaDua: document.getElementById("anggotaDuaKiriManual").value,
          petugasP2U: document.getElementById("petugasP2UKiriManual").value,
          keterangan: document.getElementById("keteranganKiriManual").value,
      };
      updatePersonilPengamanan("Kiri", selectedReguKiri, manualDataKiri);
  } else {
      // Jika regu lain dipilih, gunakan data regu
      updatePersonilPengamanan("Kiri", selectedReguKiri);
  }

  // Tampilkan atau sembunyikan form input manual (Kiri)
  toggleFormInputManualKiri(isReguBayanganKiri);
});

// Event listener untuk tombol Terapkan (Kanan)
document.getElementById("terapkanButtonKanan").addEventListener("click", function () {
  const selectedReguKanan = document.getElementById("reguSelectKanan").value;
  const isReguBayanganKanan = selectedReguKanan === "ReguBayangan";

  if (isReguBayanganKanan) {
      // Jika Regu Bayangan dipilih, gunakan data manual
      const manualDataKanan = {
          kaRupam: document.getElementById("namaKaRupamKananManual").value,
          anggotaSatu: document.getElementById("anggotaSatuKananManual").value,
          anggotaDua: document.getElementById("anggotaDuaKananManual").value,
          petugasP2U: document.getElementById("petugasP2UKananManual").value,
          keterangan: document.getElementById("keteranganKananManual").value,
      };
      updatePersonilPengamanan("Kanan", selectedReguKanan, manualDataKanan);
  } else {
      // Jika regu lain dipilih, gunakan data regu
      updatePersonilPengamanan("Kanan", selectedReguKanan);
  }

  // Tampilkan atau sembunyikan form input manual (Kanan)
  toggleFormInputManualKanan(isReguBayanganKanan);
});

// Event listener untuk pemilihan regu pada select (Kiri)
document.getElementById("reguSelectKiri").addEventListener("change", function () {
  const selectedReguKiri = document.getElementById("reguSelectKiri").value;
  const isReguBayanganKiri = selectedReguKiri === "ReguBayangan";
  toggleFormInputManualKiri(isReguBayanganKiri);
});

// Event listener untuk pemilihan regu pada select (Kanan)
document.getElementById("reguSelectKanan").addEventListener("change", function () {
  const selectedReguKanan = document.getElementById("reguSelectKanan").value;
  const isReguBayanganKanan = selectedReguKanan === "ReguBayangan";
  toggleFormInputManualKanan(isReguBayanganKanan);
});

// Event listener untuk mencegah kombinasi tombol CTRL + U
document.addEventListener('keydown', function(event) {
  if (event.ctrlKey && event.key === 'u') {
      event.preventDefault();
      document.getElementById('notification').classList.add('show-notification');
      setTimeout(function() {
          document.getElementById('notification').classList.remove('show-notification');
      }, 5000);
  }
});

let isModalVisible = false;
let notificationModal = null;

// Fungsi untuk menampilkan modal notifikasi saat klik kanan
function showNotificationModal(event) {
  event.preventDefault();
  if (!isModalVisible) {
      notificationModal = new bootstrap.Modal(document.getElementById('notificationModal'));
      notificationModal.show();
      isModalVisible = true;

      // Setelah modal tertutup, reset isModalVisible menjadi false
      notificationModal._element.addEventListener('hidden.bs.modal', function () {
          isModalVisible = false;
      });
  }
}

// Event listener untuk menampilkan modal notifikasi saat klik kanan
document.body.addEventListener('contextmenu', function (e) {
  showNotificationModal(e);
});

// Fungsi untuk menutup modal notifikasi
function closeNotificationModal() {
  if (notificationModal) {
      notificationModal.hide();
  }
}